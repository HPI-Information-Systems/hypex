FROM docker:dind

RUN apk add --no-cache python3 py3-pip py3-virtualenv
RUN apk add openssh-client git

RUN echo "http://dl-cdn.alpinelinux.org/alpine/latest-stable/main" > /etc/apk/repositories
RUN echo "http://dl-cdn.alpinelinux.org/alpine/latest-stable/community" >> /etc/apk/repositories
RUN apk add --no-cache tesseract-ocr py3-numpy py3-scipy py3-scikit-learn py3-cffi py3-psutil && \
    pip3 install --upgrade pip setuptools wheel && \
    apk add --no-cache --virtual .build-deps gcc g++ zlib-dev make python3-dev py3-numpy-dev jpeg-dev libffi-dev gfortran build-base wget libpng-dev openblas-dev linux-headers

# RUN apt update -y && \
#   apt install software-properties-common -y && \
#   add-apt-repository ppa:deadsnakes/ppa
# RUN apt install python3 python3-pip python3.8-venv -y
#
# RUN apt install openssh-client git musl-dev g++ -y
RUN mkdir -p -m 0700 ~/.ssh && ssh-keyscan gitlab.hpi.de >> ~/.ssh/known_hosts

WORKDIR /usr/src/hypaad

RUN python3 -m venv /usr/src/venv
RUN /usr/src/venv/bin/python3 -m pip install wheel setuptools
RUN /usr/src/venv/bin/python3 -m pip install --upgrade pip

COPY requirements.txt .
RUN --mount=type=ssh /usr/src/venv/bin/python3 -m pip install \
    --no-cache \
    --requirement requirements.txt

COPY setup.* .
COPY .git .git
RUN mkdir -p src/hypaad
RUN /usr/src/venv/bin/python3 setup.py develop

RUN /usr/src/venv/bin/python3 -m pip install "bokeh>=2.0.0" jupyter-server-proxy

RUN apk del .build-deps

CMD [ "/bin/sh" ]
